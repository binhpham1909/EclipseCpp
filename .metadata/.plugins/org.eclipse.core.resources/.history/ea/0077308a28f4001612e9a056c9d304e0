/*
 * FirmwareSetting.h
 *
 *  Created on: 24 thg 1, 2017
 *      Author: MyPC
 */

#ifndef DEVICESETTING_H_
#define DEVICESETTING_H_
#include "Singleton.h"
#include <EEPROM.h>

#include "GlobalConfigs.h"
#include "GPIOManager.h"

// Cac khai bao cho thong so thiet bi
// cac thong so nay chinh la ma code truy xuat nguon goc va cac ket noi
// den he thong
#define EEPROM_DEVICE_SETTING	0
#define DV_SERIAL_LEN	16
#define DV_USER_LEN		16

#define MAX_SSID_LENGTH 33
#define MAX_WIFI_PASSWORD 21
#define MAX_IP_LENGTH 15

typedef struct __attribute__((packed)){
	char md5[34];	// 34 bytes
	char deviceSerial[DV_SERIAL_LEN + 1];	// 17 bytes
	char deviceName[DV_SERIAL_LEN + 1];	// 17 bytes
	char adminPassword[DV_USER_LEN + 1];	// 17 bytes
	char userPassword[DV_USER_LEN + 1];	// 17 bytes
	char STAssid[MAX_SSID_LENGTH + 1];	// 17 bytes
	char STApassword[MAX_WIFI_PASSWORD + 1];	// 17 bytes
	char STAip[MAX_IP_LENGTH + 1];	// 17 bytes
	char STAmask[MAX_IP_LENGTH + 1];	// 17 bytes
	char STAgateway[MAX_IP_LENGTH + 1];	// 17 bytes
	bool DHCP;
	char APssid[MAX_SSID_LENGTH + 1];	// 17 bytes
	char APpassword[MAX_WIFI_PASSWORD + 1];	// 17 bytes
	int timezone;
	GPIO_t gpio[MAX_GPIO_PIN];
	GPIOState_t gpioState[MAX_GPIO_PIN];
	bool saveGPIOState;
	bool a;
} DeviceSetting_t;

class DeviceSetting : public Singleton<DeviceSetting> {
	public:
		DeviceSetting();
		virtual ~DeviceSetting();
		bool saveSetting();
		bool loadSetting();
		bool resetSettings();
		bool setDeviceSerial(String serial);
		String getDeviceSerial();
		bool setAdminPassword(String password);
		String getAdminPassword();
		GPIO_t getGPIOConfig(int index);
		bool setGPIOConfig(int index, GPIO_t gpio);
	private:
		String calcMD5();
		void updateMD5();
		bool isDirty();
		DeviceSetting_t _dv;
};

#endif /* DEVICESETTING_H_ */
