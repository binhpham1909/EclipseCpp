/*
 * FirmwareSetting.h
 *
 *  Created on: 24 thg 1, 2017
 *      Author: MyPC
 */

#ifndef DEVICESETTING_H_
#define DEVICESETTING_H_
#include "Singleton.h"
#include <EEPROM.h>

#include "GlobalConfigs.h"
#include "GPIOManager.h"

// Cac khai bao cho thong so thiet bi
// cac thong so nay chinh la ma code truy xuat nguon goc va cac ket noi
// den he thong
#define EEPROM_DEVICE_SETTING	0
#define DV_SERIAL_LEN	16
#define DV_USER_LEN		16


typedef struct __attribute__((packed)){
	int firstBoot;	// 2	bytes
	int OSVersion;
	char deviceSerial[DV_SERIAL_LEN + 1];	// 17 bytes
	char adminUser[DV_USER_LEN + 1];	// 17 bytes
	char adminPassword[DV_USER_LEN + 1];	// 17 bytes
} DeviceSetting_t;

class DeviceSetting : public Singleton<DeviceSetting> {
	public:
		DeviceSetting();
		virtual ~DeviceSetting();
		DeviceSetting_t *_dv;
		bool saveSetting();
		bool resetSettings();
	private:
};

const char admin_user[] PROGMEM = "admin";
const char admin_password[] PROGMEM = "TNENVIBH1+";
#endif /* DEVICESETTING_H_ */
