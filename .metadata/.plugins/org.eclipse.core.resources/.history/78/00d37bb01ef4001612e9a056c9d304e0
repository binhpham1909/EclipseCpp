/*
 * GPIOManager.cpp
 *
 *  Created on: 24 thg 1, 2017
 *      Author: MyPC
 */
#include "GPIOManager.h"

GPIOManager::GPIOManager() {
	// TODO

}

GPIOManager::~GPIOManager() {

}
void GPIOManager::update() {
	for (int i = 0; i < MAX_GPIO_PIN; ++i) {
		GPIO_t gpio = DeviceSetting::getInstance()->getGPIOConfig(i);
		int pin = GPIOList[i];
		if (gpio.type == IN) {
			int newValue = digitalRead(pin);
			if(newValue != _state[i].isEnable){
				GPIO_t newgpio = gpio;
				_state[i].lastValue = _state[i].isEnable;
				_state[i].isEnable = newValue;
				processInput(i);
			}
		} else if(gpio.type == OUT){
			digitalWrite(pin, _state[i].isEnable);
		} else if(gpio.type == FLASH){
			if(_state[i].isEnable){
				long curr = millis();
				if(_state[i].lastValue){
					if((curr-lastUpdate[i]) > gpio.ONTime){
						_state[i].lastValue = LOW;
						lastUpdate[i] = curr;
						digitalWrite(pin, _state[i].lastValue);
					}
				}else{
					if((curr-lastUpdate[i]) > gpio.OFFTime){
						_state[i].lastValue = HIGH;
						lastUpdate[i] = curr;
						digitalWrite(pin, _state[i].lastValue);
					}
				}
			}else{
				_state[i].lastValue = LOW;
				digitalWrite(pin, _state[i].lastValue);
			}
		} else if(gpio.type == CLICK){
			if(_state[i].isEnable){
				long curr = millis();
				if(_state[i].lastValue){
					if((curr-lastUpdate[i]) > gpio.ONTime){
						_state[i].lastValue = LOW;
						_state[i].isEnable = LOW;
						lastUpdate[i] = curr;
						digitalWrite(pin, _state[i].lastValue);
					}
				}else{
					_state[i].lastValue = HIGH;
					lastUpdate[i] = curr;
					digitalWrite(pin, _state[i].lastValue);
				}
			}
		}
	}
}

void GPIOManager::setState(int index, GPIOState_t state) {
	_state[index] = state;
}

GPIOState_t GPIOManager::getState(int index) {
	return _state[index];
}

void GPIOManager::processInput(int index) {
	MQTTConnection::getInstance()->publish("chuoi can gui o day");	// chuoi json thong bao GPIO thay doi trang thai

}
